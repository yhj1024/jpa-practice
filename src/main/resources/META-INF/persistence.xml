<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.2" xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd">
    <persistence-unit name="hello">
        <properties>
            <!-- 필수 속성 -->
            <property name="javax.persistence.jdbc.driver" value="org.h2.Driver"/>
            <property name="javax.persistence.jdbc.user" value="sa"/>
            <property name="javax.persistence.jdbc.password" value="sa"/>
            <property name="javax.persistence.jdbc.url" value="jdbc:h2:tcp://localhost/~/jpashop"/> <!-- 파일을 직접 접근 시 동시 접근 문제로 tcp 로 넣음 -->
            <!--            <property name="javax.persistence.jdbc.url" value="jdbc:h2:tcp://localhost/~/test"/> &lt;!&ndash; 파일을 직접 접근 시 동시 접근 문제로 tcp 로 넣음 &ndash;&gt;-->
            <property name="hibernate.dialect" value="jpabook.jpbshop.domain.dialect.MyH2Dialect"/>
            <!-- dialect : 포준 SQL ANSI 외에 데이터 베이스마다 가지고 있는 특정 문법 (방언) 을 맞춰주는 설정 하이버네이트 전용 옵션 -->

            <!-- 옵션 -->
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.use_sql_comments"  value="true"/>
<!--            <property name="hibernate.jdbc.batch_size"  value="10"/>-->
                        <property name="hibernate.hbm2ddl.auto" value="create" /> <!-- create 로 하면 테이블 드랍 후에 생성 none 으로 하면 그냥 생성 -->
<!--            <property name="hibernate.default_batch_size" value="1000"/> global 기본 batch size -->
            <!--
                create-drop : 애플리케이션 종료 시점에 테이블 삭제
                update : 변경분만 반영 (운영 DB에는 사용하면 안됨)
                예: create로 생성 후 특정 테이블 필드만 추가했다고 하면 컬럼만 추가됨
                삭제는 안되고 추가만 됨
                validate : 엔티티 테이블 정상 매핑을 확인함
                예: 테이블에 없는 컬럼 객체에 추가하고 실행하면 오류남
                none : 관례상 none 쓰는거고 aslkdjflaskdjf 이렇게 넣어도됨 아무것도 사용하지 않음
            -->

            <!--
                org.hibernate.dialect.H2Dialect
                방언에 따라 DDL 다르게 생성된다
            -->

            <!--
                운영 장비에는 절대 create, create-drop, update 사용 하면 안 된다
                개발 초기 단계에는 create 또는 update (로컬)
                테스트 서버는 update 또는 validate (가급적이면 테스트 서버도 안 쓰는게 낫다)
                스테이징과 운영 서버는 validate 또는 none
            -->

        </properties>
    </persistence-unit>

</persistence>
